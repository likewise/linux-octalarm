/*
 * Copyright (C) 2015 PHYTEC America, LLC
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 *
 * This file configures the interfaces supported by imx7 Solo on carrier
 * board PBA-C-09.
 *
 */

/ {
	model = "Adesys Octalarm 4500a Carrier Board for phytek imx7d module";
	compatible = "adesys,ads4500a", "phytec,imx7-phycore-som", "fsl,imx7s";

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg1_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 5 GPIO_ACTIVE_HIGH>;
			enable-active-high;
		};

		reg_vref_1v8: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;
			regulator-name = "vref-1v8";
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <1800000>;
		};

		/* For display PEB-AV-02 */
		backlight: backlight {
			compatible = "pwm-backlight";
			pwms = <&pwm3 0 50000 0>;
			enable-gpios = <&gpio1 1 0>;
			status = "disabled";
		};
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_1 &pinctrl_hog_2 &pinctrl_hog_lcd>;

	imx7d-phycore {
		pinctrl_hog_2: hoggrp-2 {
			fsl,pins = <
				MX7D_PAD_SD1_CD_B__GPIO5_IO0		0x3D /* BRD-ID0, 5k pull-up, slow, x4 drive, hys */
				MX7D_PAD_SD1_WP__GPIO5_IO1			0x3D /* BRD-ID1, 5k pull-up, slow, x4 drive, hys */
				MX7D_PAD_SD1_CMD__GPIO5_IO4			0x3D /* BRD-ID2; 5k pull-up slow, x1, hys @TODO */

				MX7D_PAD_EPDC_PWR_COM__GPIO2_IO30	0x59 /* MDM-DCD; Modem Data Carrier Detect, 47k pull-up(@TODO) */
				MX7D_PAD_EPDC_DATA10__GPIO2_IO10	0x59 /* MDM-RI; Modem Ring indicator, 47k pull-up(@TODO) */
				MX7D_PAD_EPDC_DATA11__GPIO2_IO11	0x59 /* MDM-RELAIS, 47k pull-up(@TODO) */
				MX7D_PAD_I2C4_SCL__GPIO4_IO14		0x59 /* MDM-DTS, 47k pull-up(@TODO) */
				MX7D_PAD_I2C4_SDA__GPIO4_IO15		0x59 /* MDM-RST, 47k pull-up(@TODO) */
				MX7D_PAD_EPDC_DATA12__GPIO2_IO12	0x59 /* OUT3_REL, 47k pull-up(@TODO) */
				MX7D_PAD_GPIO1_IO09__GPIO1_IO9		0x59 /* OUT4_REL, 47k pull-up(@TODO) */
				MX7D_PAD_EPDC_DATA13__GPIO2_IO13	0x39 /* BOOT-SEL; Boot Circuit Buffer Enable#, 5k pull-up (!), x4 drive, hys */
				MX7D_PAD_EPDC_DATA14__GPIO2_IO14	0x59 /* DIS-AVDD-GD, 47k pull-up(@TODO) */
				MX7D_PAD_EPDC_DATA15__GPIO2_IO15	0x59 /* DIS-FORCEOFF, 47k pull-up(@TODO) */
				MX7D_PAD_SD2_CLK__GPIO5_IO12		0x1c /* SW-SWITCH; Software switch input, 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_CMD__GPIO5_IO13		0x1c /* SW-SHDWN; Software shutdown input, 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_DATA0__GPIO5_IO14		0x1c /* SW-PWROFF output, 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_DATA1__GPIO5_IO15		0x1c /* BOOT-OPT1; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_DATA2__GPIO5_IO16		0x1c /* BOOT-OPT2; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_DATA3__GPIO5_IO17		0x1c /* BOOT-OPT3; 100k pull-down, slow, x1, hys */
				MX7D_PAD_GPIO1_IO12__GPIO1_IO12		0x1c /* CH-STAT1 input; 100k pull-down, slow, x1, hys */
				MX7D_PAD_GPIO1_IO13__GPIO1_IO13		0x1c /* CH-STAT2 input; 100k pull-down, slow, x1, hys */
				MX7D_PAD_GPIO1_IO14__GPIO1_IO14		0x1c /* CH-PG input; 100k pull-down, slow, x1, hys */
				MX7D_PAD_GPIO1_IO15__GPIO1_IO15		0x1c /* CH-EN input; 100k pull-down, slow, x1, hys */
				MX7D_PAD_EPDC_DATA08__GPIO2_IO8		0x1c /* CH-TEST1 output; 100k pull-down, slow, x1, hys */
				MX7D_PAD_EPDC_DATA09__GPIO2_IO9		0x1c /* CH-TEST2 output; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SAI1_RX_DATA__GPIO6_IO12	0x1c /* OWR-TX; 100k pull-down, slow, x1, hys @TODO */
				MX7D_PAD_SAI1_TX_BCLK__GPIO6_IO13	0x1c /* OWR-RX; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SAI1_MCLK__GPIO6_IO18		0x1c /* OUT1-OC; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_CD_B__GPIO5_IO9		0x1c /* OUT2-OC; 100k pull-down, slow, x1, hys */
				MX7D_PAD_SD2_WP__GPIO5_IO10			0x59 /* NCF-IRQ;  47k pull-up(@TODO) */
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX7D_PAD_I2C3_SDA__I2C3_SDA	0x4000007e /* @TODO find out where 0x4... is for... not in i.MX7DRM? */
				MX7D_PAD_I2C3_SCL__I2C3_SCL	0x4000007e /* 100k pull-up, slow, x2, hys */
			>;
		};

	};
};

&iomuxc_lpsr {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog_lpsr_1 &pinctrl_hog_lpsr_lcd>;

	imx7d-phycore {
		pinctrl_hog_lpsr_1: hoggrp-lpsr_1 {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO05__GPIO1_IO5		0x14 /* USB1 pwr @TODO fix for ADS4500A */
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO00__WDOD1_WDOG_B	0x74 /* switch to WDOG_B function, with power-up default pad config: 100k pull-up, fast, hys, x1 */
			>;
		};
	};
};

&i2c3 {
	clock-frequency = <400000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
	/* @TODO add kernel supported slave devices on this bus as child nodes here */
};

&usbotg1 {
	vbus-supply = <&reg_usb_otg1_vbus>;
	dr_mode = "host";
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&adc1 {
	vref-supply = <&reg_vref_1v8>;
	status = "okay";
};

/* DTS pinmuxing and bindings for LCD adapter PEB-AV-02 */

&iomuxc {
	imx7d-phycore {
		pinctrl_hog_lcd: hog_lcdgrp {
			fsl,pins = <
				MX7D_PAD_LCD_RESET__GPIO3_IO4		0x79
			>;
		};

		pinctrl_edt_ts_irq: tsirqgrp {
			fsl,pins = <
				MX7D_PAD_EPDC_DATA14__GPIO2_IO14	0x59
			>;
		};
	};
};

&iomuxc_lpsr {
	imx7d-phycore {
		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO06__UART5_DCE_RX	0x79
				MX7D_PAD_GPIO1_IO07__UART5_DCE_TX	0x79
				MX7D_PAD_SAI1_TX_SYNC__UART5_DCE_CTS	0x79
				MX7D_PAD_SAI1_TX_DATA__UART5_DCE_RTS	0x79 /* 100k pull-up, hys, x4 */
			>;
		};

		pinctrl_pwm3: pwmgrp {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO03__PWM3_OUT		0x30
			>;
		};

		pinctrl_hog_lpsr_lcd: hoggrp_lpsr_lcd {
			fsl,pins = <
				MX7D_PAD_GPIO1_IO01__GPIO1_IO1		0x59
			>;
		};
	};
};

&i2c2 {
	status = "disabled";
};

&pwm3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm3>;
	status = "okay";
};

/* DTS pinmuxing and bindings for WiFi/BT adapter PEB-WLBT-03 */
&iomuxc {
	imx7d-phycore {

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX7D_PAD_UART1_RX_DATA__UART1_DCE_RX	0x79
				MX7D_PAD_UART1_TX_DATA__UART1_DCE_TX	0x79
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX7D_PAD_UART2_RX_DATA__UART2_DCE_RX	0x79
				MX7D_PAD_UART2_TX_DATA__UART2_DCE_TX	0x79
			>;
		};

		/* @TODO maybe move over to Cortex-M4 later */
		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX7D_PAD_UART3_RX_DATA__UART3_DCE_RX	0x79
				MX7D_PAD_UART3_TX_DATA__UART3_DCE_TX	0x79
			>;
		};

		pinctrl_uart7: uart7grp {
			fsl,pins = <
				MX7D_PAD_ECSPI2_SCLK__UART7_DCE_RX	0x79
				MX7D_PAD_ECSPI2_MISO__UART7_DCE_RTS	0x79
				MX7D_PAD_ECSPI2_MOSI__UART7_DCE_TX	0x79
				MX7D_PAD_ECSPI2_SS0__UART7_DCE_CTS	0x79
			>;
		};

		pinctrl_ecspi3: ecspi3grp {
			fsl,pins = <
//				MX7D_PAD_SAI2_TX_SYNC__ECSPI3_MISO	0x2
				MX7D_PAD_SAI2_TX_BCLK__ECSPI3_MOSI	0x2
//				MX7D_PAD_SAI2_RX_DATA__ECSPI3_SCLK	0x2
//				MX7D_PAD_SD2_CD_B__GPIO5_IO9		0x59
			>;
		};
	};

};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clks IMX7D_UART1_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clks IMX7D_UART2_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	assigned-clocks = <&clks IMX7D_UART5_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_OSC_24M_CLK>;
	status = "okay";
};

&uart7 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart7>;
	assigned-clocks = <&clks IMX7D_UART7_ROOT_SRC>;
	assigned-clock-parents = <&clks IMX7D_PLL_SYS_MAIN_240M_CLK>;
	status = "okay";
};

/* spi-dev driver for WS2812b */
&ecspi3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>;
    status = "okay";

    spidev0: spi@0 {
        reg = <0x00>;
        compatible = "ws2812b";
        // SPI CLK frequency 22.857.142 Hz
        // 44 ns per bit, 352 ns per byte
        // WS2812B 0 = 0xff 0x00 0x00
        // WS2812B 1 = 0xff 0xff 0xff
//        spi-max-frequency = <22857142>;
        spi-max-frequency = <3000000>;
        status = "okay";
    };
};

